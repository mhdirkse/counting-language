/**
 * This package parses a program written in the counting-language language. Class
 * {@link com.github.mhdirkse.countlang.lang.parsing.ParseEntryPoint} is the entry
 * point. It calls ANTLR to parse the language.
 * To ANTLR it provides a listener implemented in the generated class
 * {@link com.github.mhdirkse.countlang.lang.parsing.CountlangListenerDelegator}.
 * That class delegates to a chain of handlers
 * generated by the codegenPlugin plugin. These handlers have the same
 * methods as the ANTLR 4 generated interface {@link com.github.mhdirkse.countlang.lang.CountlangListener},
 * but the method signatures are different: They have a Boolean return value
 * and they have an extra argument that gives each handler the ability to add
 * and remove handlers.
 * <p>
 * {@link com.github.mhdirkse.countlang.lang.parsing.CountlangListenerDelegator}
 * calls the registered handlers from first to last until
 * a handler returns true. If no handler does so, an exception is thrown.
 * {@link com.github.mhdirkse.countlang.lang.parsing.ParseEntryPoint}
 * starts by providing a {@link com.github.mhdirkse.countlang.lang.parsing.RootHandler} and a
 * {@link com.github.mhdirkse.countlang.lang.parsing.IgnoredMethodsHandler}.
 * The first of these collects the AST, while the last ensures that irrelevant ANTLR 4 calls are handled.
 * Additional handlers are prepended to build the nodes at every level of the tree.
 * For each node type that exists in the AST, a handler is present to build it.
 * <p>
 * To understand the list of handlers, it is helpful to distinguish collecting
 * and building nodes. The instance of {@link com.github.mhdirkse.countlang.lang.parsing.RootHandler}
 * *collects* the root node of the AST. The root node of the AST is a
 * {@link com.github.mhdirkse.countlang.ast.StatementGroup}. When the
 * {@link com.github.mhdirkse.countlang.lang.parsing.RootHandler} receives
 * an enterStatements event, it prepends a handler that *builds* this
 * {@link com.github.mhdirkse.countlang.ast.StatementGroup}, the
 * {@link com.github.mhdirkse.countlang.lang.parsing.StatementGroupHandler}.
 * The latter collects the individual statements and adds them to the
 * statement group under construction. The last exitStatements event
 * is handled by the handler that *collects* the statement group, which is
 * the {@link com.github.mhdirkse.countlang.lang.parsing.RootHandler}.
 * 
 * @author Martijn Dirkse
 */
package com.github.mhdirkse.countlang.lang.parsing;